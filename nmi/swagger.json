{
  "swagger": "2.0",
  "info": {
    "description": "Need More Info station REST API",
    "version": "1.0.0",
    "title": "NMI REST API"
  },
  "host": "localhost:8095",
  "basePath": "/",
  "tags": [
    {
      "name": "client-invoice-controller",
      "description": "Operations pertaining to clients invoices in NMI Tool."
    },
    {
      "name": "client-questions-case-controller",
      "description": "Operations pertaining to opened question cases in NMI Tool."
    },
    {
      "name": "predefined-question-controller",
      "description": "Operations pertaining to predefined questions in NMI Tool."
    },
    {
      "name": "rails-integration-controller",
      "description": "Operations pertaining to integration NMI Tool with Rails system."
    },
    {
      "name": "system-invoice-controller",
      "description": "Operations pertaining to invoices in NMI Tool."
    },
    {
      "name": "system-questions-case-controller",
      "description": "Operations pertaining to question cases in NMI Tool."
    }
  ],
  "paths": {
    "/api/internal/v1.0/nmi/client/invoices/assign": {
      "post": {
        "tags": [
          "client-invoice-controller"
        ],
        "summary": "Assigns invoices to the account.",
        "operationId": "assignInvoicesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssignInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/internal/v1.0/nmi/client/invoices/search": {
      "post": {
        "tags": [
          "client-invoice-controller"
        ],
        "summary": "Returns list of filtered invoices for account.",
        "operationId": "getFilteredInvoicesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "accountId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "filter",
            "description": "filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientInvoicesFilter"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClientInvoicesResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/internal/v1.0/nmi/client/question-cases/invoices/{invoiceId}": {
      "get": {
        "tags": [
          "client-questions-case-controller"
        ],
        "summary": "Returns opened questions case by invoice ID.",
        "operationId": "loadOpenedQuestionsCaseUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "invoiceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionsCase"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/internal/v1.0/nmi/client/question-cases/{caseId}": {
      "put": {
        "tags": [
          "client-questions-case-controller"
        ],
        "summary": "Answer the invoice questions.",
        "operationId": "answerTheQuestionsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "caseId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnsweredQuestion"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionsCase"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/internal/v1.0/nmi/close-case": {
      "post": {
        "tags": [
          "rails-integration-controller"
        ],
        "summary": "Closes the questions case and returns an ID.",
        "operationId": "closeCaseUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "imaginaryId",
            "description": "imaginaryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/internal/v1.0/nmi/open-case": {
      "post": {
        "tags": [
          "rails-integration-controller"
        ],
        "summary": "Creates questions case and returns an ID if there is no questions case belongs to the such imaginary id yet, or returns the id of an existing case.",
        "operationId": "openCaseUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "imaginaryId",
            "description": "imaginaryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/internal/v1.0/nmi/system/invoices": {
      "post": {
        "tags": [
          "system-invoice-controller"
        ],
        "summary": "Create a new invoice.",
        "operationId": "createInvoiceUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/internal/v1.0/nmi/system/invoices/search": {
      "post": {
        "tags": [
          "system-invoice-controller"
        ],
        "summary": "Returns list of filtered invoices.",
        "operationId": "getFilteredInvoicesUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "filter",
            "description": "filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemInvoicesFilter"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SystemInvoicesResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/internal/v1.0/nmi/system/invoices/{id}": {
      "get": {
        "tags": [
          "system-invoice-controller"
        ],
        "summary": "Returns a specific invoice by their identifier.",
        "operationId": "getInvoiceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/internal/v1.0/nmi/system/question-cases/invoices/{invoiceId}": {
      "get": {
        "tags": [
          "system-questions-case-controller"
        ],
        "summary": "Returns all specific question cases by their invoice ID.",
        "operationId": "loadInvoiceCasesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "invoiceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionsCase"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/internal/v1.0/nmi/system/question-cases/{caseId}": {
      "put": {
        "tags": [
          "system-questions-case-controller"
        ],
        "summary": "Update existing questions case.",
        "operationId": "manageQuestionsCaseUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "caseId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "questionsIds",
            "description": "questionsIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionsCase"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/internal/v1.0/nmi/system/questions": {
      "get": {
        "tags": [
          "predefined-question-controller"
        ],
        "summary": "Returns list of all available predefined questions.",
        "operationId": "getQuestionsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PredefinedQuestion"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "predefined-question-controller"
        ],
        "summary": "Create a new question.",
        "operationId": "createQuestionsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "questions",
            "description": "questions",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PredefinedQuestion"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PredefinedQuestion"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/internal/v1.0/nmi/system/questions/{questionId}": {
      "put": {
        "tags": [
          "predefined-question-controller"
        ],
        "summary": "Update existing question.",
        "operationId": "updateQuestionUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "description": "questionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePredefinedQuestionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PredefinedQuestion"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AnsweredQuestion": {
      "type": "object",
      "required": [
        "answer",
        "question"
      ],
      "properties": {
        "question": {
          "type": "string",
          "example": "Who were the attendees?",
          "description": "Need more information question."
        },
        "answer": {
          "type": "string",
          "example": "Employees",
          "description": "NMI question answer."
        }
      },
      "title": "AnsweredQuestion",
      "description": "Class representing an answered question."
    },
    "AssignInvoicesRequest": {
      "type": "object",
      "required": [
        "assignTo",
        "invoicesIds"
      ],
      "properties": {
        "invoicesIds": {
          "type": "array",
          "example": "[AFG-88795,ERG-87415,AEE-88222]",
          "description": "Id's of invoices that should be  assigned.",
          "items": {
            "type": "string"
          }
        },
        "assignTo": {
          "type": "string",
          "example": "test@test.com",
          "description": "Email of assignment person."
        },
        "message": {
          "type": "string",
          "example": "Additional info.",
          "description": "Additional information."
        }
      },
      "title": "AssignInvoicesRequest",
      "description": "Class representing an assign invoices request."
    },
    "ClientInvoicesFilter": {
      "type": "object",
      "required": [
        "isAssigned"
      ],
      "properties": {
        "entities": {
          "type": "array",
          "example": "Amco Chemicals B.V.",
          "description": "Invoice entities for filtering.",
          "items": {
            "type": "string"
          }
        },
        "from": {
          "type": "string",
          "format": "date-time",
          "example": "2017-05-02T09:30:00",
          "description": "Date from which to start filtering invoices (ISO 8601 date and time format)."
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "example": "2017-08-02T09:30:00",
          "description": "Date to which do filtering invoices (ISO 8601 date and time format)."
        },
        "suppliers": {
          "type": "array",
          "example": "Adv. & Co. Limited",
          "description": "Invoice suppliers name for filtering.",
          "items": {
            "type": "string"
          }
        },
        "categories": {
          "type": "array",
          "example": "Goods",
          "description": "The invoice categories for filtering.",
          "items": {
            "type": "string"
          }
        },
        "country": {
          "type": "string",
          "example": "UK",
          "description": "Invoice country code for filtering."
        },
        "progress": {
          "type": "string",
          "example": "New",
          "description": "Invoice processing status for filtering."
        },
        "isAssigned": {
          "type": "boolean",
          "example": false,
          "description": "Is invoice assigned or not."
        }
      },
      "title": "ClientInvoicesFilter",
      "description": "Class representing an invoices filter for clients NMI."
    },
    "ClientInvoicesResponse": {
      "type": "object",
      "required": [
        "assignedInvoicesCount",
        "myInvoicesCount",
        "pageElements"
      ],
      "properties": {
        "pageElements": {
          "type": "array",
          "description": "The page content as list of invoices.",
          "items": {
            "$ref": "#/definitions/Invoice"
          }
        },
        "assignedInvoicesCount": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Total count of assigned invoices."
        },
        "myInvoicesCount": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Total count of my invoices."
        }
      },
      "title": "ClientInvoicesResponse",
      "description": "Class representing an response with filtered invoices."
    },
    "CreateInvoiceRequest": {
      "type": "object",
      "required": [
        "account",
        "accountId",
        "amount",
        "category",
        "claimedVATAmount",
        "claimedVATAmountInEUR",
        "country",
        "entity",
        "invoiceDate",
        "invoiceId",
        "supplierName",
        "travelReportId"
      ],
      "properties": {
        "vatBoxId": {
          "type": "integer",
          "format": "int64",
          "example": 123,
          "description": "VatBox ID of the invoice."
        },
        "invoiceId": {
          "type": "string",
          "example": "AFG-88795",
          "description": "Unique invoice caseId."
        },
        "account": {
          "type": "string",
          "example": "Amco Industries",
          "description": "An account name that owns an invoice."
        },
        "accountId": {
          "type": "integer",
          "format": "int64",
          "example": 123,
          "description": "An account caseId that owns an invoice."
        },
        "entity": {
          "type": "string",
          "example": "Amco Chemicals B.V.",
          "description": "..."
        },
        "country": {
          "type": "string",
          "example": "UK",
          "description": "Country code where invoice was received"
        },
        "category": {
          "type": "string",
          "example": "Goods",
          "description": "The category to which the invoice belongs."
        },
        "amount": {
          "type": "integer",
          "format": "int64",
          "example": "100 EUR",
          "description": "Invoice amount with currency code."
        },
        "claimedVATAmount": {
          "type": "integer",
          "format": "int64",
          "example": "100 EUR",
          "description": "Invoice claimed amount with currency code."
        },
        "claimedVATAmountInEUR": {
          "type": "integer",
          "format": "int64",
          "example": "100 EUR",
          "description": "Invoice claimed amount in EUR."
        },
        "invoiceDate": {
          "type": "string",
          "format": "date-time",
          "example": "2017-05-02T09:30:00",
          "description": "Date of invoice creation."
        },
        "supplierName": {
          "type": "string",
          "example": "Adv. & Co. Limited",
          "description": "Supplier name."
        },
        "linkToImage": {
          "type": "string",
          "example": "https://www.link.com",
          "description": "Link to the invoice scan."
        },
        "travelReportId": {
          "type": "string",
          "example": 123456,
          "description": "Travel report ID."
        }
      },
      "title": "CreateInvoiceRequest"
    },
    "Invoice": {
      "type": "object",
      "required": [
        "account",
        "accountId",
        "amount",
        "category",
        "claimedVATAmount",
        "claimedVATAmountInEUR",
        "country",
        "entity",
        "id",
        "invoiceDate",
        "invoiceId",
        "supplierName",
        "travelReportId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Unique identifier of the invoice. No two invoices can have the same id."
        },
        "vatBoxId": {
          "type": "integer",
          "format": "int64",
          "example": 123,
          "description": "VatBox ID of the invoice."
        },
        "invoiceId": {
          "type": "string",
          "example": "AFG-88795",
          "description": "Unique invoice id."
        },
        "account": {
          "type": "string",
          "example": "Amco Industries",
          "description": "An account name that owns an invoice."
        },
        "accountId": {
          "type": "integer",
          "format": "int64",
          "example": 123,
          "description": "An account id that owns an invoice."
        },
        "entity": {
          "type": "string",
          "example": "Amco Chemicals B.V.",
          "description": "..."
        },
        "country": {
          "type": "string",
          "example": "UK",
          "description": "Country code where invoice was received"
        },
        "category": {
          "type": "string",
          "example": "Goods",
          "description": "The category to which the invoice belongs."
        },
        "amount": {
          "type": "integer",
          "format": "int64",
          "example": "100 EUR",
          "description": "Invoice total amount with currency code."
        },
        "claimedVATAmount": {
          "type": "integer",
          "format": "int64",
          "example": "100 EUR",
          "description": "Invoice claimed amount with currency code."
        },
        "claimedVATAmountInEUR": {
          "type": "integer",
          "format": "int64",
          "example": "100 EUR",
          "description": "Invoice claimed amount in EUR."
        },
        "invoiceDate": {
          "type": "string",
          "format": "date-time",
          "example": "2017-05-02T09:30:00",
          "description": "Date of invoice creation (ISO 8601 date and time format)."
        },
        "supplierName": {
          "type": "string",
          "example": "Adv. & Co. Limited",
          "description": "Supplier name."
        },
        "linkToImage": {
          "type": "string",
          "example": "https://www.link.com",
          "description": "Link to the invoice scan."
        },
        "travelReportId": {
          "type": "string",
          "example": 123456,
          "description": "Travel report ID."
        },
        "progress": {
          "type": "string",
          "example": "New",
          "description": "Invoice processing status.",
          "enum": [
            "NEW",
            "PARTIALLY",
            "DONE",
            "NONE"
          ]
        },
        "assignedTo": {
          "type": "string",
          "example": "example@mail.com",
          "description": "To whom the invoice is assigned."
        },
        "assignedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2017-08-02T09:30:00",
          "description": "When the invoice is assigned (ISO 8601 date and time format)."
        },
        "assignedMessage": {
          "type": "string",
          "example": "Optional message.",
          "description": "Message for invoice assigning."
        }
      },
      "title": "Invoice",
      "description": "Class representing an NMI invoice tracked by the application."
    },
    "InvoiceQuestion": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": 1,
          "description": "Unique identifier of the question."
        },
        "question": {
          "type": "string",
          "description": "Need more information question."
        },
        "possibleAnswers": {
          "type": "array",
          "example": "[Employees, 3rd party attendees]",
          "description": "Possible answers.",
          "items": {
            "type": "string"
          }
        },
        "answer": {
          "type": "string",
          "example": "Employees",
          "description": "NMI question answer."
        }
      },
      "title": "InvoiceQuestion",
      "description": "Class representing an question."
    },
    "PredefinedQuestion": {
      "type": "object",
      "required": [
        "category",
        "id",
        "question"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": 1,
          "description": "Unique identifier of the question."
        },
        "question": {
          "type": "string",
          "example": "Who were the attendees?",
          "description": "Need more information question."
        },
        "category": {
          "type": "string",
          "example": "Conferences",
          "description": "Question category."
        },
        "possibleAnswers": {
          "type": "array",
          "example": "[Employees, 3rd party attendees]",
          "description": "Possible answers.",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "PredefinedQuestion",
      "description": "Class representing a predefined question."
    },
    "QuestionsCase": {
      "type": "object",
      "required": [
        "id",
        "invoiceId",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": 1,
          "description": "Unique identifier of the questions case."
        },
        "name": {
          "type": "string",
          "example": "Goods A",
          "description": "Questions case name."
        },
        "invoiceId": {
          "type": "string",
          "example": "AFG-88795",
          "description": "Invoice id to which the questions case belongs."
        },
        "status": {
          "type": "string",
          "example": "OPENED",
          "description": "Questions case status.",
          "enum": [
            "OPENED",
            "CLOSED",
            "REPORTED"
          ]
        },
        "questions": {
          "type": "array",
          "description": "Set of questions.",
          "items": {
            "$ref": "#/definitions/InvoiceQuestion"
          }
        }
      },
      "title": "QuestionsCase",
      "description": "Class representing an opened questions case."
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "100",
            "101",
            "102",
            "103",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "226",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "307",
            "308",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "426",
            "428",
            "429",
            "431",
            "451",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseEntity"
    },
    "SystemInvoicesFilter": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "integer",
          "format": "int64",
          "example": 123,
          "description": "Invoice account id for filtering."
        },
        "country": {
          "type": "string",
          "example": "UK",
          "description": "Invoice country code for filtering."
        },
        "from": {
          "type": "string",
          "format": "date-time",
          "example": "2017-05-02T09:30:00",
          "description": "Date from whichh to start filtering invoices (ISO 8601 date and time format)."
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "example": "2017-08-02T09:30:00",
          "description": "Date to which do filtering invoices (ISO 8601 date and time format)."
        },
        "amountFrom": {
          "type": "integer",
          "format": "int64",
          "example": 25,
          "description": "Amount from which to start filtering invoices."
        },
        "amountTo": {
          "type": "integer",
          "format": "int64",
          "example": 500,
          "description": "Amount to which to start filtering invoices."
        },
        "amountType": {
          "type": "string",
          "example": "Total amount, Claimed amount",
          "description": "Amount type."
        },
        "expenseTypes": {
          "type": "array",
          "example": "New",
          "description": "Invoice expense types for filtering.",
          "items": {
            "type": "string"
          }
        },
        "suppliers": {
          "type": "array",
          "example": "Adv. & Co. Limited",
          "description": "Invoice suppliers name for filtering.",
          "items": {
            "type": "string"
          }
        },
        "entities": {
          "type": "array",
          "example": "Amco Chemicals B.V.",
          "description": "Invoice entities for filtering.",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "SystemInvoicesFilter",
      "description": "Class representing an invoices filter for Generator."
    },
    "SystemInvoicesResponse": {
      "type": "object",
      "required": [
        "pageElements"
      ],
      "properties": {
        "pageElements": {
          "type": "array",
          "description": "The page content as list of invoices.",
          "items": {
            "$ref": "#/definitions/Invoice"
          }
        }
      },
      "title": "SystemInvoicesResponse",
      "description": "Class representing an response with filtered system invoices."
    },
    "UpdatePredefinedQuestionRequest": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "example": "Who were the attendees?",
          "description": "Need more information question."
        },
        "category": {
          "type": "string",
          "example": "Conferences",
          "description": "Question category."
        },
        "possibleAnswers": {
          "type": "array",
          "example": "[Employees, 3rd party attendees]",
          "description": "Possible answers.",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "UpdatePredefinedQuestionRequest"
    }
  }
}